%emp(Opção)
emp(1):-
      medidas_5x5(Medidas),
      custos_x5(Custos),
      %main(Medidas,Prioridades,Custos,Orcamento)
      main(Medidas,[2,3,1,2,1],Custos,2000).

emp(2):-
      medidas_5x10(Medidas),
      custos_x5(Custos),
      main(Medidas,[1,1,1,1,1,1,1,1,1,1],Custos,2000).

emp(3):-
      medidas_10x5(Medidas),
      custos_x10(Custos),
      main(Medidas,[2,3,1,2,1],Custos,2000).

emp(4):-
      medidas_20x5(Medidas),
      custos_x20(Custos),
      main(Medidas,[2,3,1,2,1],Custos,2000).

emp(5):-
      medidas_20x10(Medidas),
      custos_x20(Custos),
      main(Medidas,[1,1,1,1,1,1,1,1,1,1],Custos,2000).      

emp(6):-
      medidas_50x5(Medidas),
      custos_x50(Custos),
      main(Medidas,[2,3,1,2,1],Custos,2000).    
 

            
medidas_5x5([[4,-3,1,-9,-4],
             [-10,-1,1,9,9],
             [-8,-1,9,1,-2],
             [1,6,3,8,-3],
             [-6,-3,0,-2,-10]
            ]).

medidas_10x5([[4,-3,1,-9,-4],
             [-10,3,1,-9,9],
             [-8,-1,9,2,-3],
             [1,-6,3,8,-3],
             [-6,-3,0,-2,-10],
             [2,-3,5,-9,-4],
             [-10,3,1,-2,9],
             [5,-1,9,1,-3],
             [1,-2,6,8,-3],
             [-6,-3,2,-2,10]
            ]).

medidas_20x5([[0,6,-6,-5,9],
              [5,-9,-1,1,6],
              [0,6,-6,-5,9],
              [-6,3,6,2,-9],
              [5,-9,-1,1,6],
              [0,6,-6,-5,9],
              [10,-10,3,2,-8],
              [-6,3,6,2,-9],
              [5,-9,-1,1,6],
              [0,6,-6,-5,9],
              [-5,4,1,10,5],
              [10,-10,3,2,-8],
              [-6,3,6,2,-9],
              [5,-9,-1,1,6],
              [0,6,-6,-5,9],
              [-3,1,3,-4,-7],
              [-5,4,1,10,5],
              [10,-10,3,2,-8],
              [-6,3,6,2,-9],
              [5,-9,-1,1,6]
             ]).

medidas_50x5([[10,3,9,0,2],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [-4,10,5,7,4],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [-9,7,-4,9,-2],
              [-4,10,5,7,4],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [-1,-5,-3,-8,4],
              [-9,7,-4,9,-2],
              [-4,10,5,7,4],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [8,-4,-8,9,-6],
              [-1,-5,-3,-8,4],
              [-9,7,-4,9,-2],
              [-4,10,5,7,4],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [7,2,-1,-6,4],
              [8,-4,-8,9,-6],
              [-1,-5,-3,-8,4],
              [-9,7,-4,9,-2],
              [-4,10,5,7,4],
              [2,-6,3,-1,5],
              [8,0,-7,2,6],
              [-2,-5,-6,1,3],
              [10,3,9,0,2],
              [6,-7,9,3,2],
              [7,2,-1,-6,4],
              [8,-4,-8,9,-6],
              [-1,-5,-3,-8,4],
              [-9,7,-4,9,-2]
             ]).

medidas_20x10([[6,1,-6,3,-2,5,9,-1,-8,2],
               [3,-9,8,-4,9,-2,-5,10,5,6],
               [6,1,-6,3,-2,5,9,-1,-8,2],
               [4,8,-4,-9,9,-6,-1,-3,-2,-8],
               [3,-9,8,-4,9,-2,-5,10,5,6],
               [6,1,-6,3,-2,5,9,-1,-8,2],
               [-3,6,-7,9,3,2,7,0,-2,-8],
               [4,8,-4,-9,9,-6,-1,-3,-2,-8],
               [3,-9,8,-4,9,-2,-5,10,5,6],
               [6,1,-6,3,-2,5,9,-1,-8,2],
               [-1,2,-9,-6,0,4,-2,-7,6,-10],
               [-3,6,-7,9,3,2,7,0,-2,-8],
               [4,8,-4,-9,9,-6,-1,-3,-2,-8],
               [3,-9,8,-4,9,-2,-5,10,5,6],
               [6,1,-6,3,-2,5,9,-1,-8,2],
               [-1,-9,-3,-7,1,8,6,5,9,-8],
               [-1,2,-9,-6,0,4,-2,-7,6,-10],
               [-3,6,-7,9,3,2,7,0,-2,-8],
               [4,8,-4,-9,9,-6,-1,-3,-2,-8],
               [3,-9,8,-4,9,-2,-5,10,5,6]
              ]).

medidas_5x10([[4,-3,1,-9,-4,3,2,-3,5,7],
             [-10,-1,1,9,8,4,2,-3,4,-1],
             [-8,-1,9,1,-2,8,-4,5,1,-3],
             [1,6,3,8,-3,3,-3,1,7,4],
             [-6,-3,0,-2,-10,1,-3,5,-6,3]
            ]).

custos_x5([100,300,200,500,720]).
custos_x10([100,1300,200,500,720,300,800,1200,450,2000]).
custos_x20([433,1269,1525,798,479,661,1695,1372,542,1660,531,1957,549,1368,63,424,1320,523,867,1765]).
custos_x50([1892,999,522,1848,1645,616,829,1099,1632,471,1677,886,773,999,1557,1447,196,1255,956,296,749,1035,1231,668,400,539,1397,1129,1907,1463,1990,66,1356,1312,126,417,1265,1487,1324,236,1512,179,856,1106,1415,985,1513,479,510,1769]).

gerarMedidas(0,_,[]).
gerarMedidas(NumMedidas,NumCriterios,Medidas):-
       length(Criterios,NumCriterios),
       all_distinct(Criterios),
       domain(Criterios, -10, 10),
       labeling([value(enume)],Criterios),
       Medidas = [Criterios | NovoMedidas],
       Num1 is NumMedidas - 1,
       gerarMedidas(Num1,NumCriterios,NovoMedidas),
       write(Medidas).

gerarCustos(NumCustos,Custos):-
        length(Custos,NumCustos),
        domain(Custos,1,2000),
        labeling(value(enume),Custos),
        write(Custos).

enume(Var,_,BB0,BB):-
       fd_set(Var,Set),
       select_best_value(Set,Value),
       (
          first_bound(BB0,BB), Var #= Value;
          later_bound(BB0,BB), Var #\= Value
       ).

select_best_value(Set,BestValue):-
        fdset_to_list(Set,Lista),
        length(Lista,Len),
        random(0,Len,RandomIndex),
        nth0(RandomIndex,Lista,BestValue).
